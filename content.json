{"meta":{"title":"高渐离^.^","subtitle":null,"description":null,"author":"John Dai","url":"http://yoursite.com"},"pages":[{"title":"study","date":"2018-01-15T09:25:05.000Z","updated":"2018-01-15T09:25:05.637Z","comments":true,"path":"study/index.html","permalink":"http://yoursite.com/study/index.html","excerpt":"","text":""}],"posts":[{"title":"QQ简单聊天系统","slug":"QQ简单聊天系统","date":"2018-01-15T10:26:24.000Z","updated":"2018-01-15T14:20:08.602Z","comments":true,"path":"2018/01/15/QQ简单聊天系统/","link":"","permalink":"http://yoursite.com/2018/01/15/QQ简单聊天系统/","excerpt":"","text":"这个其实是模拟聊天系统的对话框拉，其实是不难的，不过也是想和大家分享下拉，刚开始写博客有什么不足的地方请多指正.首先给大家看下效果图呀然后我们开始撸代码呀 是的就是这么个简单的对话框系统好哒我们先分析下行为，输入框中输入文字，然后点击左下角的小图片，图片会切换，点击发表，就形成一段对话框，重复前面的行为，就可以产生类似对话框的效果那我们开始吧 首先结构和样式重叠HTML和css css我就不写了无非就是那些样式… &lt;div id=&quot;txt-wrap&quot;&gt; &lt;div id=&quot;txt1&quot;&gt; &lt;textarea name=&quot;&quot; id=&quot;txtbox&quot; cols=&quot;60&quot; rows=&quot;10&quot; style=&quot;width: 356px;height: 60px;&quot;&gt;&lt;/textarea&gt; &lt;/div&gt; &lt;div id=&quot;txt2&quot;&gt; &lt;a href=&quot;javascript:void;&quot; id=&quot;aa&quot;&gt;&lt;img id=&quot;imgo&quot; src=&quot;images/1.jpg&quot; &gt;&lt;/a&gt; &lt;button id=&quot;btn&quot;&gt;发表&lt;/button&gt; &lt;/div&gt; &lt;/div&gt; &lt;!-- 用来作为产生弹框的容器可以这么理解 --&gt; &lt;ul id=&quot;talkbox&quot;&gt; &lt;/ul&gt; … 主要的就是js拉 …//获取各种元素节点 var txtb=document.getElementById(“txtbox”); var imgoo=document.getElementById(“imgo”); var btno=document.getElementById(“btn”); var talko=document.getElementById(“talkbox”); // 点击切换图片，关键就是定义布尔值用来判断哪张图片 var bool=true; imgoo.onclick=function(){if(bool){ imgoo.src=&quot;images/2.jpg&quot;; bool=false; } else{ imgoo.src=&quot;images/1.jpg&quot;; bool=true; } } … 点击发表形成对话框的核心就是innerHTML拉，增加文本文档…// 点击发表添加li子元素 btno.onclick=function(){ //得到图片的路径值和输入框的值存起来var sro=imgoo.src; var val=txtb.value; talkbox.innerHTML+=&quot;&lt;pre&gt;&lt;li&gt;&lt;img src=&quot;+sro+&quot;&gt;&lt;span&gt;&quot;+val+&quot;&lt;/span&gt;&lt;/li&gt;&lt;/pre&gt;&quot; //清零将对话框中的值 txtb.value=&quot;&quot;; }…这个由于ul在发表的图标之外所以不用担心节点覆盖导致的点击事件失灵的问题","categories":[],"tags":[]},{"title":"前端的理解","slug":"前端的理解","date":"2018-01-14T09:35:14.000Z","updated":"2018-01-15T10:12:54.425Z","comments":true,"path":"2018/01/14/前端的理解/","link":"","permalink":"http://yoursite.com/2018/01/14/前端的理解/","excerpt":"","text":"前端到底是啥啊，需要做什么？后面可以装逼么？ 首先，你必须是一个合格的“页面仔”，所有的页面可以用css+html来实现。js和jquery也是必须会的，因为纯静态的页面是没办法完全吸引一个用户的。你的各种特效就需要使用js或者jquery啦。jquery是一个框架它能实现js的一些效果，但是它的使用学习就更加简单。 其次，前端主要负责实现视觉和交互功能，以及与后端服务器通信，完成业务逻辑。懂一些设计方面的技能和基本素养，比如PS的一些基本操作，切图，和颜色值。而且后端的服务器知识和语言基础还是要有的，这样在工作对接的时候理解了才能更加利于团队合作. 前端开发工程师，会熟练使用时下非常流行的HTML5、CSS3技术，架构炫酷的页面；3D、旋转、粒子效果，页面变得越来越炫，对人才的要求也越来越高。 前端开发工程师，会全面掌握PC、手机、iPad等多种设备的网页呈递解决方案，响应式技术那可是看家本领，不仅仅是使用，我们会更多的探讨使用领域。 前端开发工程师，会开发微信小游戏，这可是时下十分流行的，别说『2048』、『围住神经猫』你没有玩儿过！我们可以借助于H5轻松开发小成本游戏。 前端开发工程师，会使用Facebook推出的React Native或是HTML5 Plus技术构建手机APP！HTML5颠覆原生指日可待，不管苹果还是安卓，都能用上新的APP，降低企业开发成本。 前端开发工程师，会掌握Ajax技术，页面不刷新，就能获得后台或是数据库中的数据，更好地呈递给用户！多么棒的用户体验！ 前端开发工程师，会掌握高级面向对象、设计模式、MVC、Angular等高级程序书写技术。做大项目的时候，这些技术，能够让你的项目结构清晰，易于维护！ 前端开发工程师，还会大数据的前端可视化、借助Node.js完成全栈开发、集成测试、自动化工作流、版本控制系统、团队协同、自动化部署等等 哇，这就是穿梭于世界之中的前端工程师，多么厉害的职业呀，佩服佩服，目前虽然只是一个小渣渣，但是学无止境的，华山顶在哪里我要去哪里","categories":[],"tags":[]},{"title":"高渐离的第一个博客","slug":"高渐离的第一个博客","date":"2018-01-14T08:57:10.000Z","updated":"2018-01-15T09:19:18.314Z","comments":true,"path":"2018/01/14/高渐离的第一个博客/","link":"","permalink":"http://yoursite.com/2018/01/14/高渐离的第一个博客/","excerpt":"","text":"看了下大牛的配置git，hexo，ssh，终于博客搞定了，期间很多报错还好有百度的支持，主要根据这个老哥的方法http://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html终于可以写点东西拉，是啊，如果不是为了装逼，写代码将毫无意义。让我们将装逼进行到底","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2018-01-13T09:13:36.972Z","updated":"2018-01-13T09:13:36.973Z","comments":true,"path":"2018/01/13/hello-world/","link":"","permalink":"http://yoursite.com/2018/01/13/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}